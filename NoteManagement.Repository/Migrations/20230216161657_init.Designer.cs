// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoteManagement.Repository;

#nullable disable

namespace NoteManagement.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230216161657_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NoteManagement.Core.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentNoteId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentNoteId");

                    b.ToTable("Notes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 2, 16, 19, 16, 57, 323, DateTimeKind.Local).AddTicks(7705),
                            IsDeleted = false,
                            Text = "KodLab Yayınların en iyi 3 kitapı",
                            Title = "KodLab Yayınları"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 2, 16, 19, 16, 57, 323, DateTimeKind.Local).AddTicks(7714),
                            IsDeleted = false,
                            ParentNoteId = 1,
                            Text = "C# Kitap içeriği",
                            Title = "KodLab C# Kitabı"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 2, 16, 19, 16, 57, 323, DateTimeKind.Local).AddTicks(7715),
                            IsDeleted = false,
                            ParentNoteId = 2,
                            Text = "Model View Controller",
                            Title = "MVC"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 2, 16, 19, 16, 57, 323, DateTimeKind.Local).AddTicks(7716),
                            IsDeleted = false,
                            ParentNoteId = 2,
                            Text = "Command-Query Separation",
                            Title = "CQRS"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 2, 16, 19, 16, 57, 323, DateTimeKind.Local).AddTicks(7717),
                            IsDeleted = false,
                            ParentNoteId = 2,
                            Text = "Application Programming Interface",
                            Title = "Api"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 2, 16, 19, 16, 57, 323, DateTimeKind.Local).AddTicks(7718),
                            IsDeleted = false,
                            ParentNoteId = 1,
                            Text = "Algoritma Kitap içeriği ",
                            Title = "KodLab Algoritma Kitabı"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 2, 16, 19, 16, 57, 323, DateTimeKind.Local).AddTicks(7719),
                            IsDeleted = false,
                            ParentNoteId = 6,
                            Text = "Nasıl Tasarlanır.",
                            Title = "Akış Diyagramları"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 2, 16, 19, 16, 57, 323, DateTimeKind.Local).AddTicks(7720),
                            IsDeleted = false,
                            ParentNoteId = 6,
                            Text = "C++ ve java",
                            Title = "Programlamaya giriş"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 2, 16, 19, 16, 57, 323, DateTimeKind.Local).AddTicks(7721),
                            IsDeleted = false,
                            ParentNoteId = 1,
                            Text = "Java Kitap içeriği",
                            Title = "Kodlab Java Kitabı"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 2, 16, 19, 16, 57, 323, DateTimeKind.Local).AddTicks(7722),
                            IsDeleted = false,
                            ParentNoteId = 9,
                            Text = "Spring boot kullanımı",
                            Title = "Spring boot"
                        });
                });

            modelBuilder.Entity("NoteManagement.Core.Models.Note", b =>
                {
                    b.HasOne("NoteManagement.Core.Models.Note", "ParentNote")
                        .WithMany("SubNotes")
                        .HasForeignKey("ParentNoteId");

                    b.Navigation("ParentNote");
                });

            modelBuilder.Entity("NoteManagement.Core.Models.Note", b =>
                {
                    b.Navigation("SubNotes");
                });
#pragma warning restore 612, 618
        }
    }
}
